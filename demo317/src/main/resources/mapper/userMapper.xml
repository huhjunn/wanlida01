<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.userMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="coach" jdbcType="VARCHAR" property="coach" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="graduate" jdbcType="CHAR" property="graduate" />
    <result column="schedule" jdbcType="CHAR" property="schedule" />
    <result column="licence_type" jdbcType="VARCHAR" property="licenceType" />
    <result column="registration_time" jdbcType="TIMESTAMP" property="registrationTime" />
    <result column="birthplace" jdbcType="VARCHAR" property="birthplace" />
    <result column="sex" jdbcType="CHAR" property="sex" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, name, coach, phone, graduate, schedule, licence_type, registration_time, 
    birthplace, sex
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.entity.User">
    insert into user (id, username, password, 
      name, coach, phone, 
      graduate, schedule, licence_type, 
      registration_time, birthplace, sex
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{coach,jdbcType=VARCHAR}, #{phone,jdbcType=INTEGER}, 
      #{graduate,jdbcType=CHAR}, #{schedule,jdbcType=CHAR}, #{licenceType,jdbcType=VARCHAR}, 
      #{registrationTime,jdbcType=TIMESTAMP}, #{birthplace,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="coach != null">
        coach,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="graduate != null">
        graduate,
      </if>
      <if test="schedule != null">
        schedule,
      </if>
      <if test="licenceType != null">
        licence_type,
      </if>
      <if test="registrationTime != null">
        registration_time,
      </if>
      <if test="birthplace != null">
        birthplace,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="coach != null">
        #{coach,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="graduate != null">
        #{graduate,jdbcType=CHAR},
      </if>
      <if test="schedule != null">
        #{schedule,jdbcType=CHAR},
      </if>
      <if test="licenceType != null">
        #{licenceType,jdbcType=VARCHAR},
      </if>
      <if test="registrationTime != null">
        #{registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="birthplace != null">
        #{birthplace,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="coach != null">
        coach = #{coach,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="graduate != null">
        graduate = #{graduate,jdbcType=CHAR},
      </if>
      <if test="schedule != null">
        schedule = #{schedule,jdbcType=CHAR},
      </if>
      <if test="licenceType != null">
        licence_type = #{licenceType,jdbcType=VARCHAR},
      </if>
      <if test="registrationTime != null">
        registration_time = #{registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="birthplace != null">
        birthplace = #{birthplace,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      coach = #{coach,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      graduate = #{graduate,jdbcType=CHAR},
      schedule = #{schedule,jdbcType=CHAR},
      licence_type = #{licenceType,jdbcType=VARCHAR},
      registration_time = #{registrationTime,jdbcType=TIMESTAMP},
      birthplace = #{birthplace,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--用户登录验证-->
  <select id="userlogin"  resultType="com.example.entity.User">
    SELECT id,username,password FROM user WHERE username = #{username} AND password = #{password}
  </select>

  <!--新用户注册  方式1-->
  <insert id="adduser" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO user (username,password) VALUES (#{username},#{password})
  </insert>

  <!--新用户注册  方式2-->
  <insert id="adduser1">
    INSERT INTO user (id,username,password) VALUES (UUID(),#{username},#{password})
  </insert>

</mapper>